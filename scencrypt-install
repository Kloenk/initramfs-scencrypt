#!/bin/bash

build() {
    local mod

    add_module dm-crypt
    if [[ $CRYPTO_MODULES ]]; then
        for mod in $CRYPTO_MODULES; do
            add_module "$mod"
        done
    else
        add_all_modules '/crypto/'
    fi

    if [ -d $BUILDROOT/etc/initcpio/gpg ]; then
        echo "WARNING! /etc/initcpio/gpg exists in initramfs buildroot. Huh?"
        rm -rf "$BUILDROOT/etc/initcpio/gpg"
    fi

    mkdir -p $BUILDROOT/etc/initcpio/gpg
    chmod 0700 $BUILDROOT/etc/initcpio/gpg
    echo "pinentry-program /usr/bin/pinentry-tty" > $BUILDROOT/etc/initcpio/gpg/gpg-agent.conf

    add_binary "cryptsetup"
    add_binary "dmsetup"
    add_binary "gpg"
    add_binary "gpg-agent"
    add_binary "pinentry-tty"
    add_binary "pcscd"
    add_binary "/usr/lib/gnupg/scdaemon"
    add_file "/usr/lib/udev/rules.d/10-dm.rules"
    add_file "/usr/lib/udev/rules.d/13-dm-disk.rules"
    add_file "/usr/lib/udev/rules.d/95-dm-notify.rules"
    add_file "/usr/lib/initcpio/udev/11-dm-initramfs.rules" "/usr/lib/udev/rules.d/11-dm-initramfs.rules"
    
    add_file "/etc/crypttab"

    sed -re 's;#.*$;;g' -e '/^[ \t]*$/ d' /etc/crypttab | awk '{print $3;}' | \
    while read f; do
        if [ "${f:0:1}" = "/" -a -f "$f" ]; then
            add_file "$f"
            keyid=($(file $f | egrep -o '[A-F0-9]{8}' | sed -re 's;([0-9A-F]{2});\1 ;g'))
            keyid=${keyid[3]}${keyid[2]}${keyid[1]}${keyid[0]}${keyid[7]}${keyid[6]}${keyid[5]}${keyid[4]}
            gpg --homedir /root/.gnupg --export 0x${keyid} | gpg --homedir "$BUILDROOT/etc/initcpio/gpg" --import
        fi
    done
    
    add_runscript
}

help() {
    cat <<HELPEOF
This hook adds support for the use of smartcards conforming to the OpenPGP
smartcard standard to Arch's initramfs. Encrypted objects listed in
/etc/crypttab will be decrypted with GnuPG during the initramfs stage if the
keyfile path ends in ".gpg". If GnuPG fails to decrypt the key file, the hook
will prompt for the passphrase instead.

Note that non-LUKS disks are unsupported at this time.

HELPEOF
}

# vim: set ft=sh ts=4 sw=4 et:
